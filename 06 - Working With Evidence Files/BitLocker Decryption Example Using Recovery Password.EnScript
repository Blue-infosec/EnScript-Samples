class MainClass {

  static const String EvidencePath   = "Z:\\simon\\Documents\\GSI\\Evidence Files\\Forensic Series - "
                                        "EnCase Computer Forensics II v7\\Malone's HDD (Partitions "
                                        "Allocated).E01",
                       RecoveryID    = "6C894E50-13B4-48DC-AAD3-3FFAD5C9A271",
                       Password      = "447744-331595-256102-506561-409002-304843-145365-165000";

  void Main(CaseClass c) {
    SystemClass::ClearConsole(1);
    if (LocalMachine.PathExists(EvidencePath))
    {
      Console.WriteLine("Got evidence file.");
      EvidenceClass ev();
      new EvidencePathClass(ev.EvidencePathRoot(), EvidencePath);
      ev.SetOpenMode(OPENEVIDENCEFILE);

     /*
      *  In this case a single credential is being supplied, but it is possible
      *  to use a root CredentialClass object containing a list of child
      *  credentials; each credential will be tried in turn.
      */

      CredentialClass cred();
      cred.SetEncryptionType(BITLOCKER);

     /*
      *  The options available for setting the CredentialClass algorithm are in
      *  the process of being documented. They are:
      *
      *  1  - Plain key
      *  2  - Volume
      *  3  - Use key
      *  4  - Recovery key (used in the above example)
      *  5  - AESCCM
      *  6  - Validation
      *  7  - Protector
      *  8  - Top blob
      *  9  - TPM
      *  10 - Data key
      *
      *  Not all of these options relate to BitLocker.
      */

      cred.SetAlgorithm("4");
      cred.SetPassword(Password);
      cred.SetUsername(RecoveryID);
      ev.SetCredentialRoot(cred);
      EvidenceOpenClass evopen();
      evopen.SetMountOptions(MOUNTTOCACHE   |
                             MOUNTFROMCACHE |
                             MOUNTEVTOCASE);
      if (DeviceClass d = ev.GetDevice(c, evopen)) // Will get a pop-up if credentials aren't
      {                                            // correct; this can be supressed using
                                                   // EvidenceOpenClass::MOUNTNOPOPUP
        Console.WriteLine("Evidence added to case.");
        if (EntryClass entry_root = d.GetRootEntry())
        {
          forall (EntryClass e in entry_root)
          {
            Console.WriteLine(e.ItemPath());
          }
        }
      }
      else
      {
        Console.WriteLine("Can't load evidence into the case.");
      }
    }
    else
    {
      Console.WriteLine("Can't find evidence file.");
    }
  }
}
